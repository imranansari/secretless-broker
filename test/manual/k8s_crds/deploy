#!/bin/bash -e

function pod_ready() {
  kubectl describe pod ${POD_NAME} | awk '/Ready/{if ($2 != "True") exit 1}'
}

function http_proxy_resp() {
  POD_NAME=$(kubectl get po -l app=secretless-k8s-test -o jsonpath="{.items[0].metadata.name}")
  kubectl exec -it ${POD_NAME} -c echo-server -- \
    env http_proxy=localhost:8000 curl -s localhost:8080
}
function http_resp() {
  POD_NAME=$(kubectl get po -l app=secretless-k8s-test -o jsonpath="{.items[0].metadata.name}")
  kubectl exec -it ${POD_NAME} -c echo-server -- curl --connect-timeout 4 -s localhost:8080 &> /dev/null
}

CURRENT_DIR=$(dirname $0)

echo "cleaning up previous deployments"
./stop_deployment &> /dev/null || true
echo "cleaned"
echo ""

echo "deploying CRDs"
kubectl apply -f $CURRENT_DIR/deployment.yaml &> /dev/null
echo "deployed"
echo ""

echo "waiting for CRDs to be ready"
until $(kubectl get configurations.secretless.io &> /dev/null); do
  printf ".";
  sleep 2;
done
echo ""
echo "ready"
echo ""

echo "waiting for pod to be ready"
until pod_ready; do
  printf ".";
  sleep 2;
done
until http_resp; do
  printf ".";
  sleep 2;
done
echo ""
echo "ready"
echo ""

echo "[TEST] v1 CRD config"
echo ""
echo "creating v1 CRD config"
kubectl apply -f $CURRENT_DIR/first-v1.yaml &> /dev/null
sleep 2

echo "testing"
if http_proxy_resp | grep -q "authorization=Basic dXNlcjE6cGFzc3dvcmQx"; then
  echo "test passed"
else
  echo "test failed"
  exit 1
fi
echo ""

echo "[TEST] v2 CRD config"
echo ""
echo "updating CRD config to v2"
kubectl apply -f $CURRENT_DIR/first-v2.yaml &> /dev/null
sleep 2

echo "testing"
if http_proxy_resp | grep -q "authorization=Basic b2hub2Vzd2VjaGFuZ2VkaXQ6c3VwZXJzZWNyZXRwYXNzd29yZA=="; then
  echo "test passed"
else
  echo "test failed"
  exit 1
fi
echo ""
